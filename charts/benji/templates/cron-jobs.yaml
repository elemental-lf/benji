{{- if not .Values.benji.argoWorkflows.enabled -}}
{{- range .Values.benji.crontab -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ tuple $ .name | include "benji.fullname" }}
  annotations:
    checksum/config: {{ $.Values.benji.configuration | toYaml | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "benji.name" $ }}
    helm.sh/chart: {{ include "benji.chart" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: cronjob-{{ .name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  schedule: {{ .schedule | quote }}
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
{{- if $.Values.benji.cronJob.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ $.Values.benji.cronJob.startingDeadlineSeconds }}
{{- end }}
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "benji.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: cronjob-{{ .name }}
    spec:
      backoffLimit: 0
{{- if $.Values.benji.cronJob.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ $.Values.benji.cronJob.activeDeadlineSeconds }}
{{- end }}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "benji.name" $ }}
            app.kubernetes.io/instance: {{ $.Release.Name }}
            app.kubernetes.io/component: cronjob-{{ .name }}
        spec:
          serviceAccountName: {{ tuple $ "" | include "benji.fullname" }}
          dnsPolicy: ClusterFirstWithHostNet
          restartPolicy: Never
{{- if $.Values.benji.initContainers }}
          initContainers:
{{ toYaml $.Values.benji.initContainers | indent 12 }}
{{- end }}
          containers:
            - name: benji
              image: "{{ $.Values.benji.image.registry }}/{{ $.Values.benji.image.repository }}:{{ $.Values.benji.image.tag }}"
              imagePullPolicy: {{ $.Values.benji.image.pullPolicy }}
              securityContext:
                privileged: true
              command:
                {{ toYaml .command | nindent 16 }}
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
{{- if $.Values.pushgateway.enabled }}
                - name: PROM_PUSH_GATEWAY
                  value: "{{ include "benji.pushgateway" $ }}"
{{- end }}
                - name: TZ
                  value: "{{ $.Values.timeZone }}"
              volumeMounts:
                - name: benji-config
                  mountPath: /benji/etc
                - name: tz-config
                  mountPath: /etc/localtime
{{- with $.Values.benji.volumeMounts }}
                {{- toYaml . | nindent 16 }}
{{- end }}
{{- with $.Values.benji.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
{{- end }}
          hostNetwork: false
          volumes:
    {{- if $.Values.benji.externalSecretConfig }}
            - name: benji-config
              secret:
                secretName: {{ $.Values.benji.externalSecretConfig }}
    {{- else }}
            - name: benji-config
              secret:
                secretName: {{ tuple $ "" | include "benji.fullname" }}
    {{- end }}
            - name: tz-config
              hostPath:
                path: /usr/share/zoneinfo/{{ $.Values.timeZone }}
{{- with $.Values.benji.volumes }}
            {{- toYaml . | nindent 12 }}
{{- end }}
{{- with $.Values.benji.nodeSelector }}
          nodeSelector: {{ toYaml . | nindent 12 }}
{{- end -}}
{{- with $.Values.benji.affinity }}
          affinity: {{ toYaml . | nindent 12 }}
{{- end -}}
{{- with $.Values.benji.tolerations }}
          tolerations: {{ toYaml . | nindent 12 }}
{{- end }}
{{ end -}}
{{ end -}}
